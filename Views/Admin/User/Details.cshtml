@* Views/Admin/User/Details.cshtml *@
@model WebBaoDienTu.Models.User
@{
    ViewData["Title"] = $"Chi tiết người dùng: {Model.FullName}";
    Layout = "_Layout";
}

<div class="container-fluid mt-4">
    <!-- Breadcrumb navigation -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb mb-3">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Trang chủ</a></li>
            <li class="breadcrumb-item"><a asp-controller="AdminUser" asp-action="Index">Quản lý người dùng</a></li>
            <li class="breadcrumb-item active">Chi tiết người dùng</li>
        </ol>
    </nav>

    <!-- Alerts section -->
    <partial name="_AlertsPartial" />

    <!-- Page header with basic actions -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0">Chi tiết người dùng</h1>
        <div class="d-flex gap-2">
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i> Quay lại danh sách
            </a>
            <button type="button" class="btn btn-primary edit-user-btn" data-userid="@Model.UserId">
                <i class="fas fa-edit me-1"></i> Chỉnh sửa
            </button>
        </div>
    </div>

    <div class="row">
        <!-- User information column -->
        <div class="col-md-4">
            <!-- User profile card -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white d-flex justify-content-between align-items-center py-3">
                    <h5 class="mb-0">
                        <i class="fas fa-user me-2"></i>Thông tin người dùng
                    </h5>
                    <span class="badge bg-@(Model.Role == "Admin" ? "danger" : Model.Role == "Editor" ? "primary" : "info")">
                        @Model.Role
                    </span>
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        @if (!string.IsNullOrEmpty(Model.Profile?.AvatarUrl))
                        {
                            <img src="@Url.Content($"~/uploads/avatars/{Model.Profile.AvatarUrl}")"
                                 alt="Avatar" class="rounded-circle img-thumbnail shadow-sm"
                                 style="width: 150px; height: 150px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="rounded-circle bg-secondary text-white d-flex align-items-center justify-content-center mx-auto shadow-sm"
                                 style="width: 150px; height: 150px;">
                                <i class="fas fa-user fa-4x"></i>
                            </div>
                        }
                        <h4 class="mt-3 mb-1">@Model.FullName</h4>
                        <p class="text-muted mb-2">
                            <i class="fas fa-envelope me-1"></i> @Model.Email
                        </p>

                        <div class="d-flex justify-content-center gap-2 mb-1">
                            @if (Model.IsEmailVerified)
                            {
                                <span class="badge bg-success">
                                    <i class="fas fa-check-circle me-1"></i> Đã xác minh email
                                </span>
                            }
                            else
                            {
                                <span class="badge bg-warning text-dark">
                                    <i class="fas fa-exclamation-triangle me-1"></i> Chưa xác minh email
                                </span>
                            }

                            @if (Model.IsDeleted)
                            {
                                <span class="badge bg-danger">
                                    <i class="fas fa-ban me-1"></i> Đã vô hiệu hóa
                                </span>
                            }
                            else
                            {
                                <span class="badge bg-success">
                                    <i class="fas fa-check me-1"></i> Đang hoạt động
                                </span>
                            }
                        </div>

                        <p class="text-muted small">
                            <i class="fas fa-calendar me-1"></i> Đăng ký: @Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                        </p>
                    </div>

                    <ul class="list-group list-group-flush rounded-3">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span><i class="fas fa-hashtag me-2"></i>ID người dùng</span>
                            <span class="badge bg-secondary">@Model.UserId</span>
                        </li>

                        @if (!string.IsNullOrEmpty(Model.Profile?.PhoneNumber))
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span><i class="fas fa-phone me-2"></i>Số điện thoại</span>
                                <span>@Model.Profile.PhoneNumber</span>
                            </li>
                        }

                        @if (!string.IsNullOrEmpty(Model.Profile?.Gender))
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span><i class="fas fa-venus-mars me-2"></i>Giới tính</span>
                                <span>@Model.Profile.Gender</span>
                            </li>
                        }

                        @if (Model.Profile?.DateOfBirth != null)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span><i class="fas fa-birthday-cake me-2"></i>Ngày sinh</span>
                                <span>@Model.Profile.DateOfBirth?.ToString("dd/MM/yyyy")</span>
                            </li>
                        }

                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span><i class="fas fa-newspaper me-2"></i>Số bài viết</span>
                            <span class="badge bg-primary rounded-pill">@(Model.News?.Count ?? 0)</span>
                        </li>

                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span><i class="fas fa-comments me-2"></i>Số bình luận</span>
                            <span class="badge bg-primary rounded-pill">@(Model.Comments?.Count ?? 0)</span>
                        </li>
                    </ul>

                    @if (!string.IsNullOrEmpty(Model.Profile?.Address))
                    {
                        <div class="mt-3">
                            <h6><i class="fas fa-map-marker-alt me-2"></i>Địa chỉ</h6>
                            <p class="mb-0">@Model.Profile.Address</p>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.Profile?.Bio))
                    {
                        <div class="mt-3">
                            <h6><i class="fas fa-info-circle me-2"></i>Tiểu sử</h6>
                            <p class="mb-0">@Model.Profile.Bio</p>
                        </div>
                    }
                </div>

                <!-- Status toggle button -->
                <div class="card-footer bg-white">
                    <form asp-action="ToggleStatus" asp-route-id="@Model.UserId" method="post"
                          onsubmit="return confirm('@(Model.IsDeleted ? "Kích hoạt lại tài khoản này?" : "Vô hiệu hóa tài khoản này?")');">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-@(Model.IsDeleted ? "success" : "danger") w-100">
                            <i class="fas fa-@(Model.IsDeleted ? "user-check" : "user-times") me-1"></i>
                            @(Model.IsDeleted ? "Kích hoạt lại tài khoản" : "Vô hiệu hóa tài khoản")
                        </button>
                    </form>
                </div>
            </div>

            <!-- Social Logins Card -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white d-flex justify-content-between align-items-center py-3">
                    <h5 class="mb-0">
                        <i class="fas fa-share-alt me-2"></i>Đăng nhập xã hội
                    </h5>
                    <span class="badge bg-secondary">@(Model.SocialLogins?.Count ?? 0)</span>
                </div>
                <div class="card-body">
                    @if (Model.SocialLogins != null && Model.SocialLogins.Any())
                    {
                        <ul class="list-group list-group-flush">
                            @foreach (var social in Model.SocialLogins)
                            {
                                <li class="list-group-item">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            @if (social.Provider.ToLower() == "google")
                                            {
                                                <span class="badge bg-danger me-2">
                                                    <i class="fab fa-google me-1"></i>Google
                                                </span>
                                            }
                                            else if (social.Provider.ToLower() == "facebook")
                                            {
                                                <span class="badge bg-primary me-2">
                                                    <i class="fab fa-facebook me-1"></i>Facebook
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-info me-2">@social.Provider</span>
                                            }
                                            <small class="text-muted">Đăng ký: @social.CreatedAt.ToString("dd/MM/yyyy")</small>
                                        </div>
                                        <button class="btn btn-sm btn-outline-danger" title="Hủy liên kết"
                                                onclick="unlinkSocialAccount(@social.SocialLoginId, '@social.Provider')">
                                            <i class="fas fa-unlink me-1"></i> Hủy liên kết
                                        </button>
                                    </div>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-info-circle text-muted fa-2x mb-2"></i>
                            <p class="mb-0 text-muted">Người dùng này không có tài khoản xã hội nào được liên kết</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Main content column -->
        <div class="col-md-8">
            <!-- User actions card -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0">
                        <i class="fas fa-cogs me-2"></i>Các thao tác quản lý
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <!-- Reset password action -->
                        <div class="col-md-6">
                            <div class="card h-100 border-0 shadow-sm">
                                <div class="card-body">
                                    <h6 class="card-title">
                                        <i class="fas fa-key me-2"></i>Đặt lại mật khẩu
                                    </h6>
                                    <p class="card-text small text-muted">
                                        Đặt mật khẩu mới cho người dùng này. Người dùng sẽ cần sử dụng mật khẩu mới
                                        khi đăng nhập lần sau.
                                    </p>
                                    <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#resetPasswordModal">
                                        <i class="fas fa-key me-1"></i> Đặt lại mật khẩu
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!-- Change role action -->
                        <div class="col-md-6">
                            <div class="card h-100 border-0 shadow-sm">
                                <div class="card-body">
                                    <h6 class="card-title">
                                        <i class="fas fa-user-tag me-2"></i>Thay đổi vai trò
                                    </h6>
                                    <p class="card-text small text-muted">
                                        Hiện tại: <span class="fw-bold">@Model.Role</span>
                                    </p>
                                    <div class="d-flex gap-2">
                                        <select class="form-select" id="roleSelect">
                                            <option value="User" selected="@(Model.Role == "User")">User</option>
                                            <option value="Editor" selected="@(Model.Role == "Editor")">Editor</option>
                                            <option value="Admin" selected="@(Model.Role == "Admin")">Admin</option>
                                        </select>
                                        <button type="button" class="btn btn-primary" onclick="changeUserRole(@Model.UserId)">
                                            <i class="fas fa-save"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Email verification action -->
                        <div class="col-md-6">
                            <div class="card h-100 border-0 shadow-sm">
                                <div class="card-body">
                                    <h6 class="card-title">
                                        <i class="fas fa-envelope me-2"></i>Trạng thái xác minh email
                                    </h6>
                                    <p class="card-text small text-muted">
                                        Hiện tại:
                                        @if (Model.IsEmailVerified)
                                        {
                                            <span class="badge bg-success">Đã xác minh</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning text-dark">Chưa xác minh</span>
                                        }
                                    </p>
                                    <button type="button" class="btn @(Model.IsEmailVerified ? "btn-warning" : "btn-success")"
                                            onclick="toggleEmailVerification(@Model.UserId, @(!Model.IsEmailVerified).ToString().ToLower())">
                                        <i class="fas fa-@(Model.IsEmailVerified ? "times-circle" : "check-circle") me-1"></i>
                                        @(Model.IsEmailVerified ? "Hủy xác minh email" : "Đánh dấu là đã xác minh")
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!-- Session management action -->
                        <div class="col-md-6">
                            <div class="card h-100 border-0 shadow-sm">
                                <div class="card-body">
                                    <h6 class="card-title">
                                        <i class="fas fa-sign-in-alt me-2"></i>Phiên đăng nhập
                                    </h6>
                                    <p class="card-text small text-muted">
                                        @{
                                            var activeSessions = Model.UserSessions?.Count(s => s.IsActive) ?? 0;
                                        }
                                        @if (activeSessions > 0)
                                        {
                                            <span>Có <strong>@activeSessions</strong> phiên đang hoạt động</span>
                                        }
                                        else
                                        {
                                            <span>Không có phiên đăng nhập nào đang hoạt động</span>
                                        }
                                    </p>
                                    <button type="button" class="btn btn-danger @(activeSessions == 0 ? "disabled" : "")"
                                            onclick="terminateAllSessions(@Model.UserId)" @(activeSessions == 0 ? "disabled" : "")>
                                        <i class="fas fa-sign-out-alt me-1"></i> Đăng xuất tất cả phiên
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Active Sessions Card -->
            @if (Model.UserSessions != null && Model.UserSessions.Any(s => s.IsActive))
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-white d-flex justify-content-between align-items-center py-3">
                        <h5 class="mb-0">
                            <i class="fas fa-mobile-alt me-2"></i>Phiên đăng nhập đang hoạt động
                        </h5>
                        <span class="badge bg-primary">@Model.UserSessions.Count(s => s.IsActive)</span>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>ID</th>
                                    <th>Thiết bị</th>
                                    <th>Địa chỉ IP</th>
                                    <th>Đăng nhập lúc</th>
                                    <th>Hoạt động cuối</th>
                                    <th>Hết hạn</th>
                                    <th class="text-end">Đăng xuất</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var session in Model.UserSessions.Where(s => s.IsActive).OrderByDescending(s => s.LastActivity))
                                {
                                    <tr>
                                        <td class="text-muted">@session.SessionId</td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(session.DeviceInfo))
                                            {
                                                <span data-bs-toggle="tooltip" title="@session.DeviceInfo">
                                                    <i class="fas fa-@(session.DeviceInfo.ToLower().Contains("mobile") ? "mobile-alt" : "laptop") me-1"></i>
                                                    @(session.DeviceInfo.Length > 20 ? session.DeviceInfo.Substring(0, 20) + "..." : session.DeviceInfo)
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">
                                                    <i class="fas fa-question-circle me-1"></i>Không xác định
                                                </span>
                                            }
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(session.IpAddress))
                                            {
                                                <span>
                                                    <i class="fas fa-network-wired me-1"></i>@session.IpAddress
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Không xác định</span>
                                            }
                                        </td>
                                        <td>@session.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>@session.LastActivity.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>
                                            @{
                                                var daysLeft = (session.ExpiresAt - DateTime.Now).Days;
                                            }
                                            @if (daysLeft > 0)
                                            {
                                                <span class="badge bg-success">@daysLeft ngày</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Hết hạn</span>
                                            }
                                        </td>
                                        <td class="text-end">
                                            <form asp-action="TerminateSession" asp-route-sessionId="@session.SessionId"
                                                  asp-route-userId="@Model.UserId" method="post" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-sm btn-outline-danger"
                                                        title="Kết thúc phiên"
                                                        onclick="return confirm('Kết thúc phiên đăng nhập này?');">
                                                    <i class="fas fa-sign-out-alt"></i>
                                                </button>
                                            </form>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }

            <!-- Recent Activity Tabs -->
            <div class="card shadow-sm">
                <div class="card-header bg-white p-0">
                    <ul class="nav nav-tabs card-header-tabs" id="activityTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="news-tab" data-bs-toggle="tab"
                                    data-bs-target="#news" type="button" role="tab"
                                    aria-controls="news" aria-selected="true">
                                <i class="fas fa-newspaper me-2"></i>
                                Tin tức (@(Model.News?.Count ?? 0))
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="comments-tab" data-bs-toggle="tab"
                                    data-bs-target="#comments" type="button" role="tab"
                                    aria-controls="comments" aria-selected="false">
                                <i class="fas fa-comments me-2"></i>
                                Bình luận (@(Model.Comments?.Count ?? 0))
                            </button>
                        </li>
                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content" id="activityTabsContent">
                        <!-- News Tab -->
                        <div class="tab-pane fade show active" id="news" role="tabpanel" aria-labelledby="news-tab">
                            @if (Model.News != null && Model.News.Any())
                            {
                                <div class="list-group">
                                    @foreach (var news in Model.News.OrderByDescending(n => n.CreatedAt).Take(5))
                                    {
                                        <a href="@Url.Action("Read", "News", new { id = news.NewsId })"
                                           class="list-group-item list-group-item-action" target="_blank">
                                            <div class="d-flex w-100 justify-content-between">
                                                <h6 class="mb-1">@news.Title</h6>
                                                <small>@news.CreatedAt.ToString("dd/MM/yyyy")</small>
                                            </div>
                                            <p class="mb-1 text-truncate">@Html.Raw(news.Content.Length > 100 ? news.Content.Substring(0, 100) + "..." : news.Content)</p>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <small class="text-muted">
                                                    <i class="fas fa-hashtag me-1"></i>@news.Category?.CategoryName
                                                    <i class="fas fa-eye ms-2 me-1"></i>@news.ReadCount lượt đọc
                                                </small>
                                                <span class="badge bg-@(news.IsApproved ? "success" : "warning")">
                                                    @(news.IsApproved ? "Đã duyệt" : "Chưa duyệt")
                                                </span>
                                            </div>
                                        </a>
                                    }
                                </div>

                                @if ((Model.News?.Count ?? 0) > 5)
                                {
                                    <div class="text-center mt-3">
                                        <button type="button" class="btn btn-outline-primary btn-sm view-user-activity-btn"
                                                data-userid="@Model.UserId" data-tab="news">
                                            <i class="fas fa-list me-1"></i> Xem tất cả tin tức (@Model.News.Count)
                                        </button>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-center py-5">
                                    <i class="fas fa-newspaper text-muted fa-3x mb-3"></i>
                                    <p class="text-muted">Người dùng này chưa đăng tin tức nào</p>
                                </div>
                            }
                        </div>

                        <!-- Comments Tab -->
                        <div class="tab-pane fade" id="comments" role="tabpanel" aria-labelledby="comments-tab">
                            @if (Model.Comments != null && Model.Comments.Any())
                            {
                                <div class="list-group">
                                    @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt).Take(5))
                                    {
                                        <div class="list-group-item">
                                            <div class="d-flex w-100 justify-content-between">
                                                <h6 class="mb-1">
                                                    <i class="fas fa-comment me-1"></i>
                                                    Bình luận trên bài: @comment.News?.Title
                                                </h6>
                                                <small>@comment.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                            </div>
                                            <p class="mb-1">@comment.Content</p>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <small>
                                                    <a href="@Url.Action("Read", "News", new { id = comment.NewsId })"
                                                       class="btn btn-sm btn-outline-info" target="_blank">
                                                        <i class="fas fa-external-link-alt me-1"></i>Xem bài viết
                                                    </a>
                                                </small>
                                                <div>
                                                    @if (comment.IsHidden)
                                                    {
                                                        <span class="badge bg-warning text-dark">Đã ẩn</span>
                                                    }
                                                    @if (comment.IsDeleted)
                                                    {
                                                        <span class="badge bg-danger">Đã xóa</span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>

                                @if ((Model.Comments?.Count ?? 0) > 5)
                                {
                                    <div class="text-center mt-3">
                                        <button type="button" class="btn btn-outline-primary btn-sm view-user-activity-btn"
                                                data-userid="@Model.UserId" data-tab="comments">
                                            <i class="fas fa-list me-1"></i> Xem tất cả bình luận (@Model.Comments.Count)
                                        </button>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-center py-5">
                                    <i class="fas fa-comments text-muted fa-3x mb-3"></i>
                                    <p class="text-muted">Người dùng này chưa có bình luận nào</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Reset Password Modal -->
<div class="modal fade" id="resetPasswordModal" tabindex="-1" aria-labelledby="resetPasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="ResetPassword" asp-route-id="@Model.UserId" method="post" class="needs-validation" novalidate>
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="resetPasswordModalLabel">
                        <i class="fas fa-key me-2"></i>Đặt lại mật khẩu
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-warning">
                        <div class="d-flex">
                            <div class="me-3">
                                <i class="fas fa-exclamation-triangle fa-2x"></i>
                            </div>
                            <div>
                                <h6>Lưu ý quan trọng</h6>
                                <p class="mb-0">
                                    Hành động này sẽ đặt lại mật khẩu của người dùng <strong>@Model.FullName</strong>.
                                    Người dùng sẽ phải sử dụng mật khẩu mới này để đăng nhập.
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="newPassword" class="form-label">Mật khẩu mới</label>
                        <div class="input-group">
                            <input type="password" class="form-control" id="newPassword" name="newPassword"
                                   required minlength="6" autocomplete="new-password">
                            <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                        <div class="form-text">Mật khẩu phải có ít nhất 6 ký tự.</div>
                        <div class="invalid-feedback">Vui lòng nhập mật khẩu có ít nhất 6 ký tự</div>
                    </div>

                    <div class="password-strength mt-2 mb-3">
                        <div class="progress" style="height: 5px;">
                            <div class="progress-bar bg-danger" id="password-strength-bar" role="progressbar" style="width: 0%"></div>
                        </div>
                        <small class="form-text mt-1 text-muted" id="password-strength-text">
                            <i class="fas fa-info-circle me-1"></i> Độ mạnh: Chưa nhập mật khẩu
                        </small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i> Hủy
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-key me-1"></i> Đặt lại mật khẩu
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit User Modal will be dynamically loaded by user-management.js -->
@section Scripts {
    <script src="~/js/Admin/user-details.js" asp-append-version="true"></script>
    <script src="~/js/Admin/user-management.js" asp-append-version="true"></script>
    <script src="~/js/Admin/user-activity.js" asp-append-version="true"></script>

    <script>
        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Form validation
            var forms = document.querySelectorAll('.needs-validation');
            Array.prototype.slice.call(forms).forEach(function(form) {
                form.addEventListener('submit', function(event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        });
    </script>
}
